# set log file for incoming access logs
access_log   /var/log/nginx/access.log;

# set log file for error logs
error_log    /var/log/nginx/error.log warn;

# https://www.nginx.com/resources/wiki/start/topics/recipes/wordpress/

server {

    # listen on port for all IPv4 and IPv6 addresses and use SSL encryption
    listen $NGINX_PORT ssl;
    listen [::]:$NGINX_PORT ssl;

    # set to serve if address matches msousa.42.fr or localhost
    server_name $DOMAIN localhost;

    # specify the path to the SSL certificate
    ssl_certificate $CERTIFICATE_PATH;

    # specify the path to the private key associated with the SSL certificate
    ssl_certificate_key $PRIVATE_KEY_PATH;

    # specify the versions of SSL/TLS protocols to use for encrypted connections
    ssl_protocols TLSv1.2 TLSv1.3;

    # set root directory of website
    root $VOLUME_WORDPRESS_MOUNT_PATH;

    #  enable directory indexing
    autoindex on;
    index index.php index.html;

    # disable not-found and access logging for /favicon.ico requests
    location = /favicon.ico {
        log_not_found off;
        access_log off;
    }

    # allow all access and disable logging for /robots.txt requests
    location = /robots.txt {
        allow all;
        log_not_found off;
        access_log off;
    }

    # # try to access files in the given URI or returns a 404 error if it fails
    # location / {
    #     try_files $uri $uri/ =404;
    # }

    # default behavior for requests to root, attempt to serve the requested file,
    # then falling back to "/index.php" with any query string arguments included
    location / {
        try_files $uri $uri/ /index.php?$args;
    }

    # route .php requests to a FastCGI server at wordpress:9000 and
    # set the PHP script filename and PATH_INFO parameters
    location ~\.php$ {
        fastcgi_split_path_info ^(.+\.php)(/.+)$;
        fastcgi_pass wordpress:$WORDPRESS_PORT;
        fastcgi_index index.php;
        include fastcgi_params;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        fastcgi_param PATH_INFO $fastcgi_path_info;
    }

    # set an expiry header for maximum age and disabling not-found logging for
    # certain file extensions
    location ~* \.(js|css|png|jpg|jpeg|gif|ico)$ {
        expires max;
        log_not_found off;
    }

    # turn off access logging and returns a 200 status code for health checks
    location /healthcheck {
        access_log off;
        return 200;
    }
}